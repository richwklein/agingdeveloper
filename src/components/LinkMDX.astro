---
/**
 * Component used by the {@link Content} when rendering an anchor tag in mdx.
 *
 * @param props - The anchor tag props.
 * @return {Function} an Astro component factory function.
 */
import LinkExternal from '@components/LinkExternal.astro'
import LinkInternal from '@components/LinkInternal.astro'

const props = Astro.props

// Checks against absolute URLs so we can still pass it along to the internal link component
const domainRegex = /^http[s]*:\/\/[www.]*agingdeveloper\.(com|net)[/]?/

let to = props.href
if (domainRegex.test(to)) {
  to = to.replace(domainRegex, '/')
}
const isInternal = to.startsWith('/') || to.startsWith('#') || to.startsWith('?')
---

{
  isInternal ? (
    <LinkInternal to={to} {...props}>
      <slot />
    </LinkInternal>
  ) : !to.startsWith('http') ? (
    <a data-link="other" href={to} {...props}>
      <slot />
    </a>
  ) : (
    <LinkExternal to={to} {...props}>
      <slot />
    </LinkExternal>
  )
}
