---
/**
 * @name ArticleImage
 * Component used for rendering the featured image for an article
 *
 * @param {Props} props - The properties of the featured image.
 * @return {Function} an Astro component factory function.
 *
 * @example
 * <ArticleImage featured={featured} />
 */
import LinkExternal from '@components/LinkExternal.astro'
import ResponsiveImage from '@components/ResponsiveImage.astro'
import type { ImageMetadata } from 'astro'

interface Props {
  featured: {
    image: ImageMetadata
    author?: {
      name: string
      url: string
    }
    site?: {
      name: string
      url: string
    }
  }
  class?: string
}
const {
  featured: { image, author, site },
  class: className,
} = Astro.props
const alt = author ? author.name : 'unknown'
---

<section id="article-featured" class:list={[className]}>
  <figure>
    <div class:list={['overflow-hidden rounded-md']}>
      <ResponsiveImage
        class:list={['aspect-video object-cover object-center md:aspect-[21/9]']}
        image={image}
        alt={alt}
        loading={'eager'}
        fetchpriority={'high'}
        aspect={'21/9'}
        sizes={new Map([
          [null, 420],
          [640, 640],
          [768, 768],
          [1024, 1024],
          [1280, 1280],
        ])}
      />
    </div>
    {
      author || site ? (
        <figcaption>
          <small class:list={['mt-1 text-sm text-stone-700/85']}>
            {author ? (
              <>
                {'Image by '}
                <LinkExternal class:list={['underline']} to={author.url}>
                  {author.name}
                </LinkExternal>
              </>
            ) : null}
            {site ? (
              <>
                {' on '}
                <LinkExternal class:list={['underline']} to={site.url}>
                  {site.name}
                </LinkExternal>
              </>
            ) : null}
          </small>
        </figcaption>
      ) : null
    }
  </figure>
</section>
