---
/**
 * @name OpenGraphArticle
 * Component used to build out the article open graph meta tags.
 *
 * @return {Function} an Astro component factory function.
 *
 * @example
 * <OpenGraphArticle published={article.published} modified={article.modified} authorId={article.author.id} ... />
 */
import slugify from '@sindresorhus/slugify'
import type { CollectionEntry } from 'astro:content'
import OpenGraphCore from './OpenGraphCore.astro'
import OpenGraphImage from './OpenGraphImage.astro'

interface Props {
  article: CollectionEntry<'article'>
  site: CollectionEntry<'site'>
}

const { article, site } = Astro.props
const modifiedDate = article.data.modified || article.data.published
const baseUrl = import.meta.env.SITE
---

<OpenGraphCore
  title={article.data.title}
  description={article.data.description}
  path={`${baseUrl}/article/${article.slug}`}
  type={'article'}
  site={site}
/>
<OpenGraphImage
  image={article.data.featured.image}
  imageAlt={article.data.featured.author ? article.data.featured.author.name : 'unknown'}
/>
<meta property="article:published_time" content={article.data.published.toISOString()} />
<meta property="article:modified_time" content={modifiedDate.toISOString()} />
<meta property="article:author" content={`${baseUrl}/author/${slugify(article.data.author.id)}`} />
<meta property="article:section" content={article.data.category} />
{article.data.tags.map((tag: string) => <meta property="article:tag" content={tag} />)}
