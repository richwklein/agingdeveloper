---
/**
 * @name ArticleJson
 * Component used to build out an ld+json article header.
 *
 * @return {Function} an Astro component factory function.
 *
 * @example
 * <ArticleJson article={article} author={author} wordCount={frontmatter.wordCount} />
 */
import { buildUrl } from '@utils/misc'
import type { CollectionEntry } from 'astro:content'

interface Props {
  article: CollectionEntry<'article'>
  author: CollectionEntry<'author'>
  site: CollectionEntry<'site'>
  wordCount: number
}

const { article, author, wordCount, site } = Astro.props
const modifiedDate = article.data.modified ? article.data.modified : article.data.published
---

<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify({
    '@context': 'https://schema.org',
    '@type': 'BlogPosting',
    headline: article.data.title,
    description: article.data.description,
    image: [buildUrl(article.data.featured.image.src, site.data.origin)],
    dateCreated: article.data.published.toISOString(),
    datePublished: article.data.published.toISOString(),
    dateModified: modifiedDate.toISOString(),
    author: [
      {
        '@type': 'Person',
        name: author.data.name,
        url: buildUrl(`/author/${author.id}`, site.data.origin),
      },
    ],
    wordCount: wordCount,
    keywords: [article.data.category, author.id, ...article.data.tags],
  })}
/>
