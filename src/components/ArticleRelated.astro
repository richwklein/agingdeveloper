---
/**
 * @name ArticleRelated
 * Component for showing the articles we consider related to the current one.
 *
 * @param {Props} props - The properties.
 * @return {Function} an Astro component factory function.
 *
 * @example
 * <ArticleRelated article={article}  />
 */
import LinkInternal from '@components/LinkInternal.astro'
import { getRelatedArticles } from '@utils/article'
import type { CollectionEntry } from 'astro:content'

interface Props {
  article: CollectionEntry<'article'>
  class?: string
}

const { article, class: className } = Astro.props
const related = await getRelatedArticles(article, 4)
---

{
  related.length == 0 ? null : (
    <aside class:list={['min-w-72 p-2', className]} aria-labelledby="related-articles">
      <h4
        id="related-articles"
        class:list={[
          'block border-b-[1px] border-stone-500 pb-1',
          'text-md font-bold leading-relaxed',
        ]}
      >
        Related
      </h4>
      <ol>
        {related.map((matched) => (
          <li>
            <article class:list={['text-md']}>
              <LinkInternal to={`/article/${matched.id}`} class:list={['hover:underline']}>
                <h5 class:list={['text-md my-2 block']}>{matched.data.title}</h5>
              </LinkInternal>
            </article>
          </li>
        ))}
      </ol>
    </aside>
  )
}
