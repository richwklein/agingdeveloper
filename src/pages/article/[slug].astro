---
import ArticleByLine from "@components/ArticleByLine.astro";
import ArticleImage from "@components/ArticleImage.astro";
import ArticleTagGrid from "@components/ArticleTagGrid.astro";
import ArticleTitle from "@components/ArticleTitle.astro";
import Layout from "@layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { getArticles } from "@utils/article";
import ArticleTimeToRead from "@components/ArticleTimeToRead.astro";
import MDXLink from "@components/MDXLink.astro";

interface Props {
  entry: CollectionEntry<"article">;
}

export async function getStaticPaths() {
  const entries = await getArticles();

  const pages = entries.map((entry) => {
    return {
      params: { slug: entry.slug },
      props: { entry },
    };
  });

  return pages;
}

const { entry } = Astro.props;
const article = entry.data;
const author = await getEntry(entry.data.author);

const { Content, remarkPluginFrontmatter: frontmatter } = await entry.render();
---

<Layout title={`${article.title}`}>
  <article>
    <ArticleByLine author={author} published={article.published} />
    <ArticleTitle title={article.title} description={article.description} class:list={["mt-4"]} />
    <ArticleImage featured={article.featured} class:list={["mt-4"]} />
    <section class:list={["mt-4 grid grid-flow-row grid-cols-5 gap-x-4"]}>
      <div class:list={["prose col-span-4 max-w-none md:prose-lg lg:prose-xl"]}>
        <Content components={{ a: MDXLink }} />
      </div>
      <aside>
        <ArticleTimeToRead
          minutes={frontmatter.readingTime.minutes}
          words={frontmatter.readingTime.words}
        />
      </aside>
    </section>
    <ArticleTagGrid category={article.category} tags={article.tags} class:list={["mt-4"]} />
  </article>
</Layout>
