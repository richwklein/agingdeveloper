---
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";
import slugify from "@sindresorhus/slugify";
import BreadcrumbHeader from "@components/BreadcrumbHeader.astro";
import { getArticlesByAuthor } from "@utils/article";
import DisplayLimitAlert from "@components/DisplayLimitAlert.astro";
import type { CollectionEntry } from "astro:content";
import InternalBackLink from "@components/InternalBackLink.astro";

interface Props {
  entry: CollectionEntry<"author">;
}

export async function getStaticPaths() {
  const entries = await getCollection("author");

  const pages = entries.map((entry) => {
    return {
      params: { slug: slugify(entry.id) },
      props: { entry },
    };
  });

  return pages;
}

const { entry } = Astro.props;
const limit = import.meta.env.ARTICLE_DISPLAY_LIMIT;
const author = entry.data;
const articleEntries = await getArticlesByAuthor(entry.id, limit);
---

<Layout title={`${author.name} | Authors`}>
  <BreadcrumbHeader
    head={{ name: "Authors", path: "/author" }}
    tail={author.name}
    class:list={["mb-4"]}
  />
  <h1>{author.name}</h1>
  <ol>
    {articleEntries.map((entry) => <li>{entry.data.title}</li>)}
  </ol>
  <DisplayLimitAlert total={articleEntries.length} limit={limit} class:list={["mt-4"]} />
  <InternalBackLink class:list={["mt-4"]} name={"authors"} path={"/author"} />
</Layout>
